<<<<<<< HEAD
﻿using IrrationalNumbers.Logic;
using IrrationalNumbers.Logic.Expansions;
using System;
=======
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Mathos.Parser;
>>>>>>> 2ce69b42a6b9acf3c3792d942ff03f002783bb4b

namespace IrrationalNumbers.Test
{
    class Program
    {
        private static void Main(string[] args)
        {
<<<<<<< HEAD
            IBasicFunctionExpansion expansion = new ExponentTaylorExpansion();

            Console.WriteLine(Math.Exp(2));
            Console.WriteLine(Math.Abs(expansion.ExpandFunction(-100, 2) - Math.Exp(2)));

            Console.ReadKey();
=======
            var parser = new MathParser();

            parser.LocalFunctions.Add("CustomFn", decimals => decimals[0] + 1);
            parser.LocalFunctions.Add("Custom", decimals => decimals[0] + 1);
            parser.LocalFunctions.Add("SuperCustom", decimals => decimals[0] + 1);

            parser.LocalFunctions["sin"] = decimals => 1;

            var result = parser.Parse("sin(1)");

            var result2 = parser.Parse("CustomFn(Custom(SuperCustom(1)))");

            Console.WriteLine("Result 1 is: " + result);
            Console.WriteLine("Result 2 is: " + result2);
            
>>>>>>> 2ce69b42a6b9acf3c3792d942ff03f002783bb4b
        }
    }
}
